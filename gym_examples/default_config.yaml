service: "check_no_carla"
process_index: 0
experiment_name: "ekin_debug"
log_level: "INFO"
job_timeout_seconds: 300
seed: 12345678
use_wandb: True
carla:
  num_replicas: 1
  host: "localhost"
  port: 2000
  tm_port_offset: 5
  user: "user"
  timeout_secs: 200
  fixed_delta_seconds: 0.1
  max_substep_delta_time: 0.01
  max_substeps: 10
  num_vehicles: 30
  num_pedestrians: 50
  ego_camera:
    name: "sensor.camera.rgb"
    image_width: 800
    image_height: 600
    tick: 0.05
    x: 1
    z: 2
  birdseye_camera:
    name: "sensor.camera.rgb"
    image_width: 800
    image_height: 600
    tick: 0.05
    x: -10
    z: 20
    pitch: -45
  depth_camera:
    name: "sensor.camera.depth"
    image_width: 800
    image_height: 600
    tick: 0.05
  lidar_camera:
    name: "sensor.lidar.ray_cast_semantic"
    tick: 0.05
    channels: 64
    points_per_second: 112000
    upper_fov: 40
    lower_fov: -40
    range: 100
    rotation_frequency: 20
    x: 1
    z: 2
  radar_camera:
    name: "sensor.other.radar"
    tick: 0
    x: 1
    z: 2
    horizontal_fov: 60
    vertical_fov: 60
    range: 30
    points_per_second: 3000
    sensor_tick: 0.05
    pitch: 0
common:
  img_width_resize: 384
  img_height_resize: 384
  image_size: 384
  hidden_size: 768
  num_heads: 8
  num_encoder_layers: 6
  num_decoder_layers: 6
  patch_size: 16
  max_caption_length: 285
  transform_normalize_mean: [0.485, 0.456, 0.406]
  transform_normalize_std: [0.229, 0.224, 0.225]
  exp_norm: True
  rule_boxwise: True
  iou_threshold: 0.5
  rulebook_boxwise:
    - name: "vehicle-collision"
      type: "collision-boxwise"
      value: 1000
      weight: 1
      level: 0
      actor: "*vehicle*"
    - name: "vehicle-rss"
      type: "rss-boxwise"
      value: 100
      weight: 0.5
      level: 2
      actor: "*vehicle*"
      min: 45
      angle: 45
      norm: 1000
      a_brake_min: 2
      a_brake_max: 4
      a_max: 5
      rho: 0.1
    - name: "hard-brake"
      type: "hard-brake-boxwise"
      value: 100
      weight: 0.5
      level: 2
      actor: "*"
      min: 45
      angle: 45
      norm: 1000
      a_brake_min: 10
      a_brake_max: 3
      a_max: 10
      rho: 0.1
  rulebook:
    # - name: "pedestrian-collision"
    #   type: "collision"
    #   value: 2000
    #   weight: 1
    #   level: 0
    #   # 0
    #   actor: "*walker.pedestrian*"
    #   norm: 20000
    - name: "vehicle-collision"
      type: "collision"
      value: 1000
      weight: 1
      level: 0
      # 0
      actor: "*vehicle*"
      norm: 10000
    - name: "distance"
      type: "distance"
      value: 200
      weight: 1
      level: 1
      min: 10
      angle: 45
      actor: "*walker.pedestrian*"
      norm: 2000
    # - name: "vehicle-proximity"
    #   type: "proximity"
    #   value: 100
    #   weight: 0.5
    #   level: 1
    #   actor: "*vehicle*"
    #   min: 45
    #   angle: 45
    #   norm: 1000
    - name: "vehicle-rss"
      type: "rss"
      value: 100
      weight: 0.5
      level: 2
      actor: "*vehicle*"
      min: 45
      angle: 45
      norm: 1000
      a_brake_min: 2
      a_brake_max: 4
      a_max: 5
      rho: 0.1
    # - name: "pedestrian-rss"
    #   type: "rss"
    #   value: 100
    #   weight: 0.5
    #   level: 2
    #   actor: "*walker.pedestrian*"
    #   min: 45
    #   angle: 45
    #   norm: 1000
    #   a_brake_min: 10
    #   a_brake_max: 3
    #   a_max: 10
    #   rho: 0.1
    - name: "smooth-run"
      type: "smooth"
      value: 100
      weight: 0.5
      level: 2
      actor: "*"
      min: 45
      angle: 45
      norm: 1000
      a_brake_min: 10
      a_brake_max: 3
      a_max: 10
      rho: 0.1
    - name: "hard_brake"
      type: "hard_brake"
      value: 100
      weight: 0.5
      level: 2
      actor: "*"
      min: 45
      angle: 45
      norm: 1000
      a_brake_min: 10
      a_brake_max: 3
      a_max: 10
      rho: 0.1

    # - name: "pedestrian-proximity"
    #   type: "proximity"
    #   value: 200
    #   weight: 1
    #   level: 2
    #   # 2
    #   min: 10
    #   angle: 45
    #   actor: "*walker.pedestrian*"
    #   norm: 2000
    # - name: "velocity"
    #   type: "velocity"
    #   value: 100
    #   weight: 1
    #   level: 3
    #   # 3
    #   min: 20
    #   max: 25
    #   norm: 3000
  vocabulary:
    start_token: "<start>"
    end_token: "<end>"
    unknown_token: "<unk>"
    pad_token: "<pad>"
    vehicle_tokens: ["car", "truck", "bus"]
    pedestrian_tokens: ["person", "bicycle"]
    tokens:
      # [
      #   "person",
      #   "car",
      # ]
      [
        "person",
        "bicycle",
        "car",
        "motorcycle",
        "airplane",
        "bus",
        "train",
        "truck",
        "boat",
        "trafficlight",
        "firehydrant",
        "stopsign",
        "parkingmeter",
        "bench",
        "bird",
        "cat",
        "dog",
        "horse",
        "sheep",
        "cow",
        "elephant",
        "bear",
        "zebra",
        "giraffe",
        "backpack",
        "umbrella",
        "handbag",
        "tie",
        "suitcase",
        "frisbee",
        "skis",
        "snowboard",
        "sportsball",
        "kite",
        "baseballbat",
        "baseballglove",
        "skateboard",
        "surfboard",
        "tennisracket",
        "bottle",
        "wineglass",
        "cup",
        "fork",
        "knife",
        "spoon",
        "bowl",
        "banana",
        "apple",
        "sandwich",
        "orange",
        "broccoli",
        "carrot",
        "hotdog",
        "pizza",
        "donut",
        "cake",
        "chair",
        "couch",
        "pottedplant",
        "bed",
        "diningtable",
        "toilet",
        "tv",
        "laptop",
        "mouse",
        "remote",
        "keyboard",
        "cellphone",
        "microwave",
        "oven",
        "toaster",
        "sink",
        "refrigerator",
        "book",
        "clock",
        "vase",
        "scissors",
        "teddybear",
        "hairdrier",
        "toothbrush",
      ]
pretrain:
  num_epochs: 100
  batch_size: 8
  learning_rate: 0.0001
  gamma: 0.95
  data:
    root_path: "/data/train/train2014"
    annFile_path: "/data/annotations/instances_train2014.json"
    subset_num_images: 0
  model_save_path: "/models/detection_transfomer_384_full.pth"

test:
  baseline_model_path: "/results/test/checkpoints/0.pth"
  trained_model_path: "/results/test/checkpoints/9.pth"
  num_epochs: 1
  num_trajectories: 5
  trajectory_length: 40
  use_baseline: True
  use_captions: True
  use_semi_random_actor_generation: True
  jobs:
    completion_check_interval_secs: 3 
  json_path: "/models/vehicle_class_json_file.txt"
train:
  num_epochs: 20
  num_trajectories: 12
  trajectory_length: 120
  use_baseline: True
  use_captions: True
  use_semi_random_actor_generation: True
  algorithms:
    pg_and_ce_online: False
      # start_epoch: 0
      # epoch_interval: 1
      # batch_size: 10
      # learning_rate: 0.00005
    pg_recall: False
      # start_epoch: 0
      # epoch_interval: 1
      # batch_size: 10
      # learning_rate: 0.00005    
    pg_rb_boxwise:
      start_epoch: 0
      epoch_interval: 1
      batch_size: 10
      learning_rate: 0.000001
      rewards_w: 0.0
    pg: False
      # start_epoch: 0
      # epoch_interval: 1
      # batch_size: 10
      # learning_rate: 0.000001
      # rewards_w: 0.5
    pg_and_ce: False
      # start_epoch: 0
      # epoch_interval: 0
      # batch_size: 10
      # learning_rate: 0.00005
    ce_online: False
      # start_epoch: 0
      # epoch_interval: 1
      # batch_size: 10
      # learning_rate: 0.0001
    ce_coco: False
      # start_epoch: 0
      # epoch_interval: 1
      # batch_size: 24
      # learning_rate: 0.0001
      # iters: 128
  jobs:
    completion_check_interval_secs: 3
  # model_path: "/models/detection_transfomer_carla6000_384_full_epoch100.pth"
  model_baseline_path: "/models/detection_transfomer_384_full.pth"
  model_path: "/models/detection_transfomer_384_full.pth"
  json_path: "/models/vehicle_class_json_file.txt"
evaluate:
  num_trajectories: 20
  trajectory_length: 600
  use_semi_random_actor_generation: True
  jobs:
    completion_check_interval_secs: 3
  # sample_model_path: "/models/detection_transfomer_carla6000_384_full_epoch100.pth"
  # baseline_model_path: "/models/detection_transfomer_carla6000_384_full_epoch100.pth"
  sample_model_path: "/models/detection_transfomer_384_full.pth"
  baseline_model_path: "/models/detection_transfomer_384_full.pth"
analyze:
  category_histograms: True
  scores: True
hydra:
  run:
    dir: /results/${experiment_name}/hydra_outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
